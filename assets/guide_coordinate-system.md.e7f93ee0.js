import{_ as s,c as a,o as n,U as e}from"./chunks/framework.fb79f17b.js";const D=JSON.parse('{"title":"Coordinate system","description":"","frontmatter":{},"headers":[],"relativePath":"guide/coordinate-system.md","filePath":"guide/coordinate-system.md","lastUpdated":1662209508000}'),o={name:"guide/coordinate-system.md"},l=e(`<h1 id="coordinate-system" tabindex="-1">Coordinate system <a class="header-anchor" href="#coordinate-system" aria-label="Permalink to &quot;Coordinate system&quot;">​</a></h1><blockquote><p>With square grids, there&#39;s one obvious way to do it. With hexagons, there are multiple approaches.</p><p>— <cite><a href="https://www.redblobgames.com/grids/hexagons/#coordinates" target="_blank" rel="noreferrer">redblobgames.com</a></cite></p></blockquote><h2 id="four-types" tabindex="-1">Four types <a class="header-anchor" href="#four-types" aria-label="Permalink to &quot;Four types&quot;">​</a></h2><p>There are four types of coordinates:</p><ol><li><strong>Cube</strong></li></ol><p>The most verbose type, but also the most explicit. All three coordinates must add up to 0.</p><p>Example: <code>{ q: 1, r: 2, s: -3 }</code>.</p><p>Inspired by <a href="https://www.redblobgames.com/grids/hexagons/#coordinates-cube" target="_blank" rel="noreferrer">redblobgames</a>.</p><ol start="2"><li><strong>Axial</strong></li></ol><p>The same as cube coordinates, but without the <code>s</code> coordinate. <code>s</code> is redundant (or any <em>one</em> of the coordinates); any combination of <code>q</code> and <code>r</code> (or any <em>two</em> coordinates) still represents a unique hex.</p><p>Example: <code>{ q: 1, r: 2 }</code>.</p><p>Inspired by <a href="https://www.redblobgames.com/grids/hexagons/#coordinates-axial" target="_blank" rel="noreferrer">redblobgames</a>.</p><ol start="3"><li><strong>Offset</strong></li></ol><p>This system has different coordinates depending on the hex&#39;s <a href="/honeycomb/api/interfaces/HexSettings.html#offset"><code>offset</code> setting</a>.</p><p>Example: <code>{ col: 1, row: 2 }</code>.</p><p>Inspired by <a href="https://www.redblobgames.com/grids/hexagons/#coordinates-offset" target="_blank" rel="noreferrer">redblobgames</a>.</p><ol start="4"><li><strong>Tuple</strong></li></ol><p>The same as cube or axial coordinates, but in a <a href="https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types" target="_blank" rel="noreferrer">tuple</a></p><p>Example: <code>[1, 2]</code> or <code>[1, 2, -3]</code>.</p><hr><p>Internally, Honeycomb uses axial or cube coordinates mostly. Tuple coordinates are the most terse and convenient, so they&#39;re used primarily in the documentation.</p><p>You may also find points (e.g.: <code>{ x: 1, y: 2 }</code>) in the library. For example, a hex&#39;s <code>corners</code> property returns an array of the hex&#39;s six corner points.</p><p>A hex has properties for every type of coordinates (except tuple):</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> hex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Hex</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">q   </span><span style="color:#676E95;font-style:italic;">// 1</span></span>
<span class="line"><span style="color:#A6ACCD;">hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">r   </span><span style="color:#676E95;font-style:italic;">// 2</span></span>
<span class="line"><span style="color:#A6ACCD;">hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">s   </span><span style="color:#676E95;font-style:italic;">// -3</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">col </span><span style="color:#676E95;font-style:italic;">// 2</span></span>
<span class="line"><span style="color:#A6ACCD;">hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">row </span><span style="color:#676E95;font-style:italic;">// 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Only the cube coordinates can be set, the offset coordinates are readonly.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Be careful when setting cube coordinates, because <strong>cube coordinates must always add up to 0</strong>.</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> hex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Hex</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"><span style="color:#A6ACCD;">hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">q </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">q </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">r </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">s </span><span style="color:#676E95;font-style:italic;">// ⚠️ 1, this must always be 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">col </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// ❌ TypeError</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><h2 id="hexcoordinates" tabindex="-1"><code>HexCoordinates</code> <a class="header-anchor" href="#hexcoordinates" aria-label="Permalink to &quot;\`HexCoordinates\`&quot;">​</a></h2><p>Most functions/methods that require coordinates accept <code>HexCoordinates</code>, which is a <a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#union-types" target="_blank" rel="noreferrer">union type</a> of the four coordinate types.</p><p>Because <code>HexCoordinates</code> can be any of the four types, you may use <code>toCube()</code> to convert <code>HexCoordinates</code> to <code>CubeCoordinates</code>:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">toCube</span><span style="color:#A6ACCD;">(Hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">settings</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">])             </span><span style="color:#676E95;font-style:italic;">// { q: 1, r: 2, s: -3 }</span></span>
<span class="line"><span style="color:#82AAFF;">toCube</span><span style="color:#A6ACCD;">(Hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">settings</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// { q: 0, r: 2, s: -2 }</span></span>
<span class="line"><span style="color:#82AAFF;">toCube</span><span style="color:#A6ACCD;">(Hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">settings</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">s</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">r</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)     </span><span style="color:#676E95;font-style:italic;">// { q: -7, r: 4, s: 3 }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="converting" tabindex="-1">Converting <a class="header-anchor" href="#converting" aria-label="Permalink to &quot;Converting&quot;">​</a></h2><p>There are some functions for converting between types of coordinates.</p><p>Converting to cube coordinates:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">offsetToCube</span><span style="color:#A6ACCD;">(Hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">settings</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">col</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">row</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// { q: 0, r: 2, s: -2 }</span></span>
<span class="line"><span style="color:#82AAFF;">pointToCube</span><span style="color:#A6ACCD;">(Hex</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">settings</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">y</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)     </span><span style="color:#676E95;font-style:italic;">// { q: -1, r: 13, s: -12 }</span></span>
<span class="line"><span style="color:#82AAFF;">tupleToCube</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">])                             </span><span style="color:#676E95;font-style:italic;">// { q: 1, r: 2, s: -3 }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Converting from a hex to something else:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// set a hex&#39;s radius or side (they&#39;re equal) to 30</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> Hex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineHex</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">dimensions</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">30</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> hex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Hex</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">hexToOffset</span><span style="color:#A6ACCD;">(hex)  </span><span style="color:#676E95;font-style:italic;">// { col: 2, row: 2 }</span></span>
<span class="line"><span style="color:#82AAFF;">hexToPoint</span><span style="color:#A6ACCD;">(hex)   </span><span style="color:#676E95;font-style:italic;">// { x: 103.92304845413263, y: 90 }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><details class="details custom-block"><summary>Details</summary><p><code>pointToCube()</code>, <code>offsetToCube()</code>, <code>toCube()</code> and <a href="/honeycomb/api/#distance"><code>distance()</code></a> require <a href="/honeycomb/api/interfaces/HexSettings.html">hex settings</a> to work. See <a href="/honeycomb/guide/custom-hexes.html">Custom hexes</a> to learn more about this.</p></details>`,37),p=[l];function t(r,c,i,y,C,A){return n(),a("div",null,p)}const F=s(o,[["render",t]]);export{D as __pageData,F as default};
