import{_ as e,c as t,o as a,U as o}from"./chunks/framework.fb79f17b.js";const m=JSON.parse('{"title":"Interface: HexSettings","description":"","frontmatter":{},"headers":[],"relativePath":"api/interfaces/HexSettings.md","filePath":"api/interfaces/HexSettings.md","lastUpdated":1673899083000}'),i={name:"api/interfaces/HexSettings.md"},n=o('<h1 id="interface-hexsettings" tabindex="-1">Interface: HexSettings <a class="header-anchor" href="#interface-hexsettings" aria-label="Permalink to &quot;Interface: HexSettings&quot;">â€‹</a></h1><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">â€‹</a></h2><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">â€‹</a></h3><ul><li><a href="./HexSettings.html#dimensions">dimensions</a></li><li><a href="./HexSettings.html#offset">offset</a></li><li><a href="./HexSettings.html#orientation">orientation</a></li><li><a href="./HexSettings.html#origin">origin</a></li></ul><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">â€‹</a></h2><h3 id="dimensions" tabindex="-1"><a id="dimensions" name="dimensions"></a> dimensions <a class="header-anchor" href="#dimensions" aria-label="Permalink to &quot;&lt;a id=&quot;dimensions&quot; name=&quot;dimensions&quot;&gt;&lt;/a&gt; dimensions&quot;">â€‹</a></h3><p><strong>dimensions</strong>: <a href="./Ellipse.html"><code>Ellipse</code></a></p><p>An object with an <code>xRadius</code> and <code>yRadius</code>. There are two radiuses to make it possible to have &quot;wide&quot; (<code>xRadius</code> &gt; <code>yRadius</code>) or &quot;tall&quot; (<code>xRadius</code> &lt; <code>yRadius</code>) hexes.</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/flauwekeul/honeycomb/blob/master/src/hex/types.ts#L85" target="_blank" rel="noreferrer">hex/types.ts:85</a></p><hr><h3 id="offset" tabindex="-1"><a id="offset" name="offset"></a> offset <a class="header-anchor" href="#offset" aria-label="Permalink to &quot;&lt;a id=&quot;offset&quot; name=&quot;offset&quot;&gt;&lt;/a&gt; offset&quot;">â€‹</a></h3><p><strong>offset</strong>: <a href="./../#HexOffset"><code>HexOffset</code></a></p><p>In a grid with pointy hexes, each row is offsetted half a hex relative to the previous row. In grids with flat hexes, this applies to the columns. Redblobgames has a <a href="https://www.redblobgames.com/grids/hexagons/#coordinates-offset" target="_blank" rel="noreferrer">visual example</a>.</p><p>Set the offset property to <code>1</code> or <code>-1</code> (the default) to control whether the even or odd rows/columns are offsetted.</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/flauwekeul/honeycomb/blob/master/src/hex/types.ts#L103" target="_blank" rel="noreferrer">hex/types.ts:103</a></p><hr><h3 id="orientation" tabindex="-1"><a id="orientation" name="orientation"></a> orientation <a class="header-anchor" href="#orientation" aria-label="Permalink to &quot;&lt;a id=&quot;orientation&quot; name=&quot;orientation&quot;&gt;&lt;/a&gt; orientation&quot;">â€‹</a></h3><p><strong>orientation</strong>: <a href="./../enums/Orientation.html"><code>Orientation</code></a></p><p>Either pointy â¬¢ (the default) or flat â¬£.</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/flauwekeul/honeycomb/blob/master/src/hex/types.ts#L89" target="_blank" rel="noreferrer">hex/types.ts:89</a></p><hr><h3 id="origin" tabindex="-1"><a id="origin" name="origin"></a> origin <a class="header-anchor" href="#origin" aria-label="Permalink to &quot;&lt;a id=&quot;origin&quot; name=&quot;origin&quot;&gt;&lt;/a&gt; origin&quot;">â€‹</a></h3><p><strong>origin</strong>: <a href="./Point.html"><code>Point</code></a></p><p>If a hex is <a href="/honeycomb/api/#hexToPoint">converted to a point</a>, its origin point is crucial. The origin is relative to a hex&#39;s center, so an origin of <code>{ x: 0, y: 0 }</code> (the default) means its center. An origin of <code>{ x: 10, y: 5 }</code> means 10 right and 5 down from the center. <code>{ x: -5, y: -10 }</code> means 5 left, 10 up. You get the <code>Point</code> ðŸ™ƒ.</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">â€‹</a></h4><p><a href="https://github.com/flauwekeul/honeycomb/blob/master/src/hex/types.ts#L96" target="_blank" rel="noreferrer">hex/types.ts:96</a></p>',29),r=[n];function s(d,h,l,f,c,p){return a(),t("div",null,r)}const g=e(i,[["render",s]]);export{m as __pageData,g as default};
